---
title: "X-Factors: External Influences of a Hockey Goaltender's Performance"
subtitle: "My subtitle if needed"
author: 
  - Daniel Du
thanks: "Code and data are available at: [https://github.com/danield424/HockeyShotAnalysis](https://github.com/danield424/HockeyShotAnalysis)."
date: today
date-format: long
abstract: "appropriately pitched to a non-specialist audience. The abstract answers: 1) what was done, 2) what was found, and 3) why this matters (all at a high level). Likely four sentences. Abstract must make clear what we learn about the world because of this paper."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false
library(tidyverse)
library(arrow)
library(modelsummary)
library(caret)
library(knitr)
library(kableExtra)
```

# Introduction

The introduction is self-contained and tells a reader everything they need to know including: 1) broader context to motivate; 2) some detail about what the paper is about; 3) a clear gap that needs to be filled; 4) what was done; 5) what was found; 6) why it is important; 7) the structure of the paper. A reader should be able to read only the introduction and know what was done, why, and what was found.

Overview paragraph

Few team sport athletes have as much influence on team performance as the hockey goaltender. Legendary performances, like Dominik Hasek single-handedly dragging Czechia past heavy favourites Canada and Russia to win the 1998 Olympic gold medal, are etched in the history books forever. Yet up until recently, it was hard to quantify goaltender performances; standard metrics such as wins, percentage of shots saved, and goals allowed per game did not tell the full story about goaltender's performance. The explosion in popularity of sports analytics has led to new metrics that better measure what fans see with the eye test. The most popular advanced metric, Goals Saved Above Expected (GSAx), is an all-encompassing statistic that captures a goaltender's performance relative to their peers. This is calculated by finding the difference between the goals a goaltender allows and the number a goaltender is 'expected' to allow; the expectation is quantified using an advanced model with many factors, such as MoneyPuck's model: source here. Although GSAx is an established metric that outlines which goaltenders consistently overperform, it still isn't clear *why* they, beyond obvious factors like skill level and experience. Buzzwords like "mentality" and "being on a roll" are part of the average fan's vernacular.

Paragraph discussing ESTIMAND: effect of various in-game factors on the goaltender's GSAx (Goals Saved Above Expected) during a game. This paper aims to quantify the effect of these external factors, measuring how various variables affect a goaltender's performance. Research Question: What factors influence a goaltender's performance in terms of GSAx? To better understand how goaltenders perform under different conditions, we fit a model that predicts the GSAx with external variables such as x, y, z, that allows us to quantify the impact of various factors on a goalie's overperformance/underperformance.

FINDINGS PARGRAPH: We found that... The trends we identified could inform player evaluation and performance predictions.

The remainder of this paper is structured as follows: @sec-data introduces the data and methodology used; @sec-model describes the model used to answer our research question; @sec-results presents the key findings; @sec-discussion discusses the real-world implications of these results.

\newpage 

# Data {#sec-data}

## Overview 

To analyze the effect of external factors on goaltender performance, we use a log of 394,250 shots taken during the 2021-22 to 2024-25 NHL regular and post-seasons, provided by Moneypuck @moneypuck. Moneypuck is a publicly available source of hockey analytics that tracks advanced statistics, playoff odds, and event data. The shot data is updated daily from official NHL game reports, and is organized by season. For the current 2024-25 season, data is included up to November 26, 2024.

The dataset includes well-documented variables essential for analyzing goaltender performance, and was selected for its reliability, comprehensive coverage, and accessibility. While other sources, such as the NHL’s API or third-party aggregators like Natural Stat Trick, offer similar information, Moneypuck’s integration of official NHL reporting, consistent data updates, and easy access make it the preferred choice. Shot data available for all years since 2008-09; we choose the 2021-22 season as the dataset starting point as this was the first full season following the COVID-19 pandemic.

The data spans 137 variables that provide metadata and contextual information about each shot. This analysis focuses on external factors hypothesized to influence goaltender performance, grouped into categories related to game state, in-game performance, and recent performance (see @sec-variables). Data cleaning steps ensured consistency and accuracy, with a detailed explanation provided in @sec-appendix-a.

The data spans 137 variables that provide metadata and contextual information about each shot. This analysis focuses on a subset of variables representing external factors hypothesized to influence goaltender performance, grouped into categories related to game state, in-game performance, and recent performance. The data was thoroughly cleaned to ensure accuracy and prepare it for analysis; the process is detailed in @sec-appendix-a.

## Measurement and Limitations  {#sec-measurement}

Shots, defined as any player’s attempt to score by directing the puck at the net, are classified as an event type by the NHL. Events, along with their associated attributes and metadata, are officially recorded by Sportradar, the NHL's data partner, using AI-powered data tools @sportradar. Events are also counted and verified by official scorekeepers. 

Both AI and human collection methods are subject to potential errors, including misclassification or missed events; the exact processes used to address data discrepancies are not disclosed, introducing a level of uncertainty. However, the likelihood of significant errors is low given the importance of accurate statistics to the NHL - statistics are critical for tracking individual and team performance, determining award winners, and informing league decisions, such as rule enforcement or changes. Therefore, Moneypuck’s integration of this information provides a reliable resource for analytics.

## Variables {#sec-variables}

From the cleaned dataset, we calculate response variable `GSAx_segment`, which represents the average goals saved above expected by a goaltender over a 10-minute segment. Our goal is to identify external factors that influence a goaltender's performance; below we outline the reasons for measuring performance with `GSAx_segment`. We select predictor variables representing external factors hypothesized to affect goaltender performance during the time interval. These predictors are categorized into three groups:

1. Game state: 

- `isHomeTeam`: Indicates whether the goaltender is playing at home or away.
- `isPlayoffGame`: Indicates whether the game is a regular-season or playoff game.

2. In-game performance and workload: sll of these metrics are measured by first finding the value for each shot in a `GSAx_segment` based on prior shot data, then getting the final value by averaging the shot-level values across the segment.

- `period`: the game period (e.g. 1st, 2nd).
- `goalieTeamScoreDifferential`: the score differential for the goaltender's team (positive when winning, negative when losing).
- `shots_faced`: a measure of the total shots the goaltender has faced in the game.
- `shotslast3min`: the shots the goaltender has faced in the last 3 minutes.
- `GSAx_so_far`: the goaltender's GSAx so far in the game. 


3. Recent games performance:

- `last_game_GSAx`: GSAx from the previous game, representing goaltender performance in the previous game.  
- `last_5_avg_GSAx`: average GSAx from the 5 previous games, representing performance in the previous 5 games.

Some pairs of predictors are closely related, such as `shots_faced` and `shotslast3min`, and `last_game_GSAx` and `last_5_avg_GSAx`. Potential multicollinearity arising from these relationships is addressed in @sec-model, where we also explore interactions between predictors.

Our research focuses on how external circumstances influence goaltender performance, not the difficulty of the shots themselves. Therefore, we exclude variables directly used in the calculation of `GSAx`, such as shot danger and location. These variables measure the intrinsic difficulty of the shots faced and are already incorporated into `GSAx`. Including them as predictors would conflate shot quality with the external factors we want to analyze, such as game state, workload, and recent form.

By excluding these variables, we ensure the model evaluates the situational factors that drive over or underperformance relative to the expectations set by the shots faced, as captured by `GSAx_segment`.

### Outcome variable {#sec-responsevariable}

todo: add discussion on GSAx with top goaltenders?

`GSAx_segment` quantifies goaltender performance over 10-minute time intervals during a game. It is calculated by averaging the Goals Saved Above Expected (GSAx) of all shots faced by a goaltender within 10-minute chunks of game time. This approach aggregates performance across several shots to provide a more stable measure of goaltender ability, minimizing the influence of variability inherent within single shots. Using time-segmented data, rather than shot-specific values, allows us to evaluate patterns of performance more reliably across a game.

Using 10-minute time segments to measure GSAx has limitations, as the intervals do not align perfectly with the key game events such as periods of player imbalance or of high shot volume. Furthermore, segments in games with overtime are cut short due to sudden-death scoring, potentially biasing its comparability with other segments. However, `GSAx_segment` is still valuable as it balances granularity and interpretability, providing snapshots of short-term performance without the noise introduced analyzing shot by shot. It also allows for uniform comparison across games and goaltenders, facilitating broader analysis of performance trends.

The following is a statistical summary of `GSAx_segment` and its distribution:

```{r}
#| echo: false
#| eval: true
#| message: false
allshots <- read_parquet("../data/02-analysis_data/shotdata.parquet")
prepare_for_model <- function(shot_dataset) {
  shot_dataset <- shot_dataset %>% mutate(
    last_game_GSAx = ifelse(is.na(last_game_GSAx), median(last_game_GSAx, na.rm = TRUE), last_game_GSAx),
    last_5_avg_GSAx = ifelse(is.na(last_5_avg_GSAx), median(last_5_avg_GSAx, na.rm = TRUE), last_5_avg_GSAx),
    time_segment = floor(time / 600))
  
    segment_data <- shot_dataset %>%
    group_by(game_id, goalieNameForShot, time_segment) %>%
    summarise(
      # Average the past-performance metrics over the interval
      isHomeTeam = mean(isHomeTeam),
      isPlayoffGame = mean(isPlayoffGame),
      goalieTeamScoreDifferential = mean(goalieTeamScoreDifferential),
      shotslast3min = mean(shotslast3min),
      shots_faced = mean(shots_faced),
      period = last(period),
      GSAx_so_far = mean(GSAx_so_far),
      last_game_GSAx = mean(last_game_GSAx),
      last_5_avg_GSAx = mean(last_5_avg_GSAx),
      # Response variable: Mean GSAx for the interval
      GSAx_segment = mean(GSAx),
      .groups = "drop")
  return(segment_data)
}
shot_data <- prepare_for_model(allshots)
```

```{r}
#| echo: false
#| label: tbl-1
#| tbl-cap: Summary statistics for response variable GSAx_segment
summary_stats <- c(
  Min = round(min(shot_data$GSAx_segment), 2),
  "1st Quantile" = round(quantile(shot_data$GSAx_segment, 0.25), 2),
  Median = round(median(shot_data$GSAx_segment), 2),
  Mean = round(mean(shot_data$GSAx_segment), 2),
  "3rd Quantile" = round(quantile(shot_data$GSAx_segment, 0.75), 2),
  Max = round(max(shot_data$GSAx_segment), 2),
  "Standard Deviation" = round(sd(shot_data$GSAx_segment), 2))

summary_GSAx_segment <- data.frame(
  Statistic = names(summary_stats),
  Value = as.numeric(summary_stats)) %>%
  kable(format = "pipe", col.names = c("Summary Statistic", "GSAx_segment")) 
summary_GSAx_segment
```
From @tbl-1, the mean GSAx_segment is -0.01, close to the expected value of 0. This aligns with the idea that GSAx should average out to 0 when aggregated across many segments and goaltenders, as GSAx represents the difference between actual and expected goals. The median is slightly positive at 0.03, indicating that a slight majority of time segments may reflect slightly above-average performance. The standard deviation of 0.13 `GSAx_segment` indicates moderate variability in performance across time segments.

```{r}
#| label: fig-1
#| fig-cap: Distribution of GSAx_segment
#| echo: false
#| out-width: 67%

ggplot(shot_data, aes(x = GSAx_segment)) +
  geom_histogram(binwidth = 0.01, fill = "pink", color = "black", alpha = 0.8) +
  labs(
    title = "Distribution of GSAx_segment",
    x = "GSAx_segment",
    y = "Number of Segments"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  )

```

From @fig-1, the distribution sharply peaks near 0, with a long tail extending toward both positive and negative extremes; this indicates most time segments exhibit performance close to expected levels, with occasional outliers where goaltenders significantly underperform or overperform. The distribution's longer negative tail reflects the occasional high-impact errors (e.g., letting in unexpected goals) that skews `GSAx_segment` in short time frames.

### Predictor variables

#### Game state predictors: Home vs Away, Regular Season vs Playoffs

`isHomeTeam` is a binary variable equal to 1 if the goaltender is playing at home, and 0 if playing away. This variable examines the impact of home-ice advantage on performance, given that teams historically perform better at home @homeadv.

`isPlayoffGame` is a binary variable equal to 1 for playoff games and 0 for regular-season games. Playoff games are higher-stakes, lower-scoring environments that may influence a goaltender’s mindset, workload, or performance @playoffs. By including this variable, we assess whether this affects performance.

These game state variables are static for each segment, as segments occur entirely within single games. @tbl-2 summarizes the dataset's segments, categorized by the two predictors.

```{r}
#| label: tbl-2
#| tbl-cap: Count of segments by game state
#| echo: false
combination_counts <- table(shot_data$isHomeTeam, shot_data$isPlayoffGame)
combination_counts_df <- as.data.frame(combination_counts)
colnames(combination_counts_df) <- c("IsHomeTeam", "IsPlayoffGame", "Count")
combination_counts_df %>%
  kable(format = "pipe", col.names = c("Is Home Team", "Is Playoff Game", "Count"))
```

As expected, the dataset primarily contains regular-season games. Additionally, the `GSAx_segments` for home and away games are similar, as each game involves one goalie playing at home and another playing away; discrepancies are attributable to infrequent goaltender substitutions.

#### In-game performance and workload predictors: period, score, shots faced, shots in last 3 minutes, performance so far {#sec-period}

`period` is a categorical variable representing the period the segment takes place in, created by splitting the game into 20-minute intervals. Note that since segments are 10 minutes and almost all periods are 20 minutes, every segment will take place within one period. The only exception is regular season 5 minute overtime periods, but these are guaranteed to be the game's final period, so it still holds true that no segment overlaps periods. 

We analyze if the period has any effect on goaltender performance, choosing to represent periods categorically to capture unique performance differences in each period without assuming a linear progression. In @tbl-3 and @tbl-4 we see segments that fall in each period for regular season and playoff games.

```{r}
#| label: tbl-3
#| tbl-cap: Segment breakdown for regular season periods
#| echo: false
regular_season_data <- shot_data[shot_data$isPlayoffGame == 0, ]
segment_counts_per_period <- table(regular_season_data$period)
segment_counts_df <- as.data.frame(segment_counts_per_period)
colnames(segment_counts_df) <- c("Period", "Segment Count")
segment_counts_df %>%
  kable(format = "pipe", col.names = c("Period", "Number of Segments"))
```

Predictably, segments are similar across the first 3 periods. We can infer that roughly 10% of games require the extra 5-minute overtime period.

```{r}
#| label: tbl-4
#| tbl-cap: Segment breakdown for playoff periods
#| echo: false
playoff_data <- shot_data[shot_data$isPlayoffGame == 1, ]
playoff_data$period <- factor(playoff_data$period, 
                               levels = c("1st Period", "2nd Period", "3rd Period", "Overtime", 
                                          "2nd OT or later"))
segment_counts_per_period2 <- table(playoff_data$period)
segment_counts_df2 <- as.data.frame(segment_counts_per_period2)
colnames(segment_counts_df2) <- c("Period", "Segment Count")
segment_counts_df2 %>%
  kable(format = "pipe", col.names = c("Period", "Number of Segments"))
```

Periods are similar for playoff games, with the difference being that overtime periods are the same length as regular periods, and additional overtime periods are required if there is no scoring. Roughly 13% of games require overtime.

- `goalieTeamScoreDifferential` represents the average differential of the game score over the course of the 10 minute segment. It is positive if the goaltender's team is leading, 0 if the game is tied, and negative if the goaltender's team is trailing; this allows us to analyze whether goaltenders perform better when their team is winning or losing, or depending on how close the game is. Decimal values reflect score changes within the segment.

```{r}
#| label: tbl-5
#| tbl-cap: Summary of segments by goaltender team score differential
#| echo: false
summary_stats2 <- c(
  Min = round(min(shot_data$goalieTeamScoreDifferential), 1),
  "1st Quantile" = round(quantile(shot_data$goalieTeamScoreDifferential, 0.25), 1),
  Median = round(median(shot_data$goalieTeamScoreDifferential), 1),
  Mean = round(mean(shot_data$goalieTeamScoreDifferential), 1),
  "3rd Quantile" = round(quantile(shot_data$goalieTeamScoreDifferential, 0.75), 1),
  Max = round(max(shot_data$goalieTeamScoreDifferential), 1),
  "Standard Deviation" = round(sd(shot_data$goalieTeamScoreDifferential), 1))

summary_score <- data.frame(
  Statistic = names(summary_stats2),
  Value = as.numeric(summary_stats2)) %>%
  kable(format = "pipe", col.names = c("Summary Statistic", "Goalie Team Score Diff.")) 
summary_score
```
@tbl-5 shows this stat is symmetrical, as every non-tied segment has a winning and losing goalie. Both the median and mean are 0, representing tied segments. The median and mean is 0, representing segments where the game is tied. Due to its symmetry, we can better visualize the `goalieTeamScoreDifferential` distribution by taking the absolute value in @fig-2.

```{r}
#| label: fig-2
#| fig-cap: Distribution of the absolute value of the score differential in segments.
#| echo: false
#| out-width: 67%

ggplot(shot_data, aes(x = abs(goalieTeamScoreDifferential))) +
  geom_histogram(binwidth = 1, fill = "lightblue", color = "black", alpha = 0.8) +
  labs(title = NULL, 
       x = "Goalie Team Score Differential (Absolute Value)", 
       y = "Number of Segments") +
  theme_minimal()
```

Most segments occur when the game is tied, and the number of segments decreases exponentially with an increase in score differential. Segments with a larger differential are rarer, as games tend to remain close in score. 

To analyze for winning and losing game states without the symmetry effect, we can look at the distribution for an individual goaltender such as Vancouver's Thatcher Demko. From @fig-3, many segments were tied throughout, and he spent slightly more time with his team winning. Most segments have unchanging score differentials, categorized by the integer average.

```{r}
#| label: fig-3
#| fig-cap: Distribution of the score differential for segments of goaltender Thatcher Demko.
#| echo: false
#| out-width: 67%

ggplot(shot_data %>% filter(goalieNameForShot=="Thatcher Demko"), aes(x = goalieTeamScoreDifferential)) +
  geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black", alpha = 0.8) +
  labs(title = "Segments of Thatcher Demko (VAN)", 
       x = "Vancouver's Score Differential", 
       y = "Number of Segments") + scale_x_continuous(breaks = seq(-5, 9, by = 1)) +
  theme_minimal()
```

- `shots_faced` represents the cumulative number of shots a goaltender has faced in the game prior to each shot in the segment, averaged over each shot. This gives a measure of the goaltender's prior workload; we analyze how it influences the goaltender's ability to stop subsequent shots.

```{r}
#| label: tbl-6
#| tbl-cap: Summary of segments by shots faced
#| echo: false

summary_stats2.5 <- c(
  Min = round(min(shot_data$shots_faced), 0),
  "1st Quantile" = round(quantile(shot_data$shots_faced, 0.25), 0),
  Median = round(median(shot_data$shots_faced), 0),
  Mean = round(mean(shot_data$shots_faced), 0),
  "3rd Quantile" = round(quantile(shot_data$shots_faced, 0.75), 0),
  Max = round(max(shot_data$shots_faced), 0),
  "Standard Deviation" = round(sd(shot_data$shots_faced), 0))

summary_shots <- data.frame(
  Statistic = names(summary_stats2.5),
  Value = as.numeric(summary_stats2.5)) %>%
  kable(format = "pipe", col.names = c("Summary Statistic", "Shots Faced")) 
summary_shots
```

From @tbl-6, the mean of 15 indicates that a goaltender has faced 15 prior shots across the average segment. The maximum prior workload for a segment was 78 shots.

```{r}
#| label: fig-4
#| fig-cap: Distribution of shots faced so far, averaged across shots in segment.
#| echo: false
#| out-width: 67%

ggplot(shot_data, aes(x = shots_faced)) +
  geom_histogram(binwidth = 5, fill = "lightblue", color = "black", alpha = 0.8) +
  labs(title = NULL, 
       x = "Average Total Shots Faced Prior to Shot in Segment", 
       y = "Number of Segments") +
  theme_minimal()
```

We see in @fig-4 that the distribution of `shots_faced` is close to uniform for values between 0-25. Beyond 20 shots, the number of segments decreases exponentially, reflecting that fewer games reach very high shot counts.

- `shotslast3min` finds the shots the goaltender has faced in the 3 minutes prior to each shot in the segment, then takes the average across all shots in the segment. Note this is not equivalent to the shots faced in the 3 minutes prior to the segment; it is a dynamic value that can vary for each shot in the segment. By measuring this value, we evaluate whether facing many shots in quick succession can improve performance by keeping the goaltender "in rhythm" or more alert, or decrease performance by increasing pressure on the goaltender.

```{r}
#| echo: false
#| label: tbl-7
#| tbl-cap: Summary of segments by the average shots faced in the last 3 minutes, across segment shots.

summary_stats3 <- c(
  Min = round(min(shot_data$shotslast3min), 1),
  "1st Quantile" = round(quantile(shot_data$shotslast3min, 0.25), 1),
  Median = round(median(shot_data$shotslast3min), 1),
  Mean = round(mean(shot_data$shotslast3min), 1),
  "3rd Quantile" = round(quantile(shot_data$shotslast3min, 0.75), 1),
  Max = round(max(shot_data$shotslast3min), 1),
  "Standard Deviation" = round(sd(shot_data$shotslast3min), 1))

summary_last3 <- data.frame(
  Statistic = names(summary_stats3),
  Value = as.numeric(summary_stats3)) %>%
  kable(format = "pipe", col.names = c("Summary Statistic", "ShotsLast3min")) 
summary_last3
```

From @tbl-7 and @fig-5, segments are roughly normally distributed with a mean of 1.3, meaning a goaltender saw ~1.3 shots in the 3 minutes prior to every shot in an average segment. Segments ranged from those with no shots in the preceding 3 minutes to segments where the goaltender saw an average of 9 shots in the last 3 minutes. 

```{r}
#| echo: false
#| label: fig-5
#| fig-cap: Distribution of segments depending on average shots seen in the last 3 minutes averaged across the segment.
#| out-width: 67%

ggplot(shot_data, aes(x = shotslast3min)) +
  geom_histogram(binwidth = 0.33, fill = "lightblue", color = "black", alpha = 0.8) +
  labs(title = NULL, 
       x = "Shots in 3 min Prior to Shot (Segment Average)", 
       y = "Number of Segments") +
  scale_x_continuous(breaks = seq(0, max(table(shot_data$shotslast3min)), by = 1)) +
  theme_minimal()
```

- `GSAx_so_far` is the cumulative GSAx of a goaltender up to the current point in the game, prior to the shots in the segment. This variable captures how well a goaltender has performed relative to expectation throughout the game up to the current moment, enabling exploration of whether strong performance early in a game carries over into later segments, and vice versa.

```{r}
#| echo: false
#| label: tbl-8
#| tbl-cap: Summary of segments by accumulated GSAx prior to segment.

summary_stats4 <- c(
  Min = round(min(shot_data$GSAx_so_far), 2),
  "1st Quantile" = round(quantile(shot_data$GSAx_so_far, 0.25), 2),
  Median = round(median(shot_data$GSAx_so_far), 2),
  Mean = round(mean(shot_data$GSAx_so_far), 2),
  "3rd Quantile" = round(quantile(shot_data$GSAx_so_far, 0.75), 2),
  Max = round(max(shot_data$GSAx_so_far), 2),
  "Standard Deviation" = round(sd(shot_data$GSAx_so_far), 2))

summary_sofar <- data.frame(
  Statistic = names(summary_stats4),
  Value = as.numeric(summary_stats4)) %>%
  kable(format = "pipe", col.names = c("Summary Statistic", "GSAx so far")) 
summary_sofar
```
In @tbl-8, the median 0.12 and mean 0.1 suggest that goaltender performance prior to segments is generally close to expectations, with slight overperformance common. In @fig-6 the distribution is approximately normal and centered near 0; the range (-5.98 to 6.06) and standard deviation 1.01 indicate considerable variability in in-game performance.

```{r}
#| echo: false
#| fig-cap: Distribution of segments based on the goaltender's accumulated GSAx prior to segment.
#| label: fig-6
#| out-width: 67%

ggplot(shot_data, aes(x = GSAx_so_far)) +
  geom_histogram(binwidth = 0.1, fill = "lightblue", color = "black", alpha = 0.8) +
  labs(title = NULL, 
       x = "GSAx so far", 
       y = "Number of Segments") +
  theme_minimal()
```

#### Recent performance predictors: Last game and last 5 games

- `last_game_GSAx` represents the goaltender's performance in the previous game, measured with the cumulative GSAx.
- `last_5_avg_GSAx` representing the goaltender's performance in the previous 5 games, measured with average cumulative GSAx.

With these, we can see if the previous performance or stretch of performances carries over to the next goaltender performance.

```{r}
#| echo: false
#| label: tbl-9
#| tbl-cap: Summary of segments by goaltender GSAx in the previous game.

summary_stats5 <- c(
  Min = round(min(shot_data$last_game_GSAx), 2),
  "1st Quantile" = round(quantile(shot_data$last_game_GSAx, 0.25), 2),
  Median = round(median(shot_data$last_game_GSAx), 2),
  Mean = round(mean(shot_data$last_game_GSAx), 2),
  "3rd Quantile" = round(quantile(shot_data$last_game_GSAx, 0.75), 2),
  Max = round(max(shot_data$last_game_GSAx), 2),
  "Standard Deviation" = round(sd(shot_data$last_game_GSAx), 2))

summary_last <- data.frame(
  Statistic = names(summary_stats5),
  Value = as.numeric(summary_stats5)) %>%
  kable(format = "pipe", col.names = c("Summary Statistic", "Last game GSAx")) 
summary_last
```


```{r}
#| echo: false
#| fig-cap: Distribution of segments based on the goaltender's previous game GSAx.
#| label: fig-7
#| out-width: 67%

ggplot(shot_data, aes(x = last_game_GSAx)) +
  geom_histogram(binwidth = 0.25, fill = "bisque", color = "black", alpha = 0.8) +
  labs(title = NULL, 
       x = "GSAx in previous game", 
       y = "Number of Segments") +
  theme_minimal()
```

From @fig-7, we observe a roughly normal distribution centered near 0, which aligns with expectations. The mean of 0.06 in @tbl-9 may reflect a selection effect, as goaltenders with particularly poor performances in their previous games may not play in the following game, skewing the distribution slightly toward positive values.

From @fig-8, when we increase the prior performance sample to 5 games, the tails are shorter, with average GSAx falling mostly between -2 and 2. The lower standard deviation in @tbl-10 confirms this. Other variable features are similar to `last_game_GSAx`.

```{r}
#| echo: false
#| label: tbl-10
#| tbl-cap: Summary of segments by average goaltender GSAx in the previous 5 games.

summary_stats6 <- c(
  Min = round(min(shot_data$last_5_avg_GSAx), 2),
  "1st Quantile" = round(quantile(shot_data$last_5_avg_GSAx, 0.25), 2),
  Median = round(median(shot_data$last_5_avg_GSAx), 2),
  Mean = round(mean(shot_data$last_5_avg_GSAx), 2),
  "3rd Quantile" = round(quantile(shot_data$last_5_avg_GSAx, 0.75), 2),
  Max = round(max(shot_data$last_5_avg_GSAx), 2),
  "Standard Deviation" = round(sd(shot_data$last_5_avg_GSAx), 2))

summary_last5 <- data.frame(
  Statistic = names(summary_stats6),
  Value = as.numeric(summary_stats6)) %>%
  kable(format = "pipe", col.names = c("Summary Statistic", "Last 5 Average GSAx")) 
summary_last5
```

```{r}
#| echo: false
#| fig-cap: Distribution of segments based on the average GSAx of the goaltender's previous 5 games.
#| label: fig-8
#| out-width: 67%

ggplot(shot_data, aes(x = last_5_avg_GSAx)) +
  geom_histogram(binwidth = 0.25, fill = "bisque", color = "black", alpha = 0.8) +
  labs(title = NULL, 
       x = "Average GSAx in last 5 games", 
       y = "Number of Segments") +
  theme_minimal()
```

\newpage

# Model {#sec-model}

Using the statistical programming software R [@citeR] as well as packages [@tidyverse], [@modelsummary] and [@caret], we develop a linear regression model with `GSAx_segment` as the response variable and our outlined factors as predictor variables. The objective of this model is to identify which predictors significantly influence goaltender performance, using p-values to assess significance and coefficients to evaluate the magnitude of their effects. 

Alternative modeling approaches were considered, such as using shot-level or game-cumulative GSAx as the response variable. These approaches analyze different levels of granularity; we chose the segment-based model as it is detailed and interpretable. It focuses on how external factors shape performance without introducing excessive uncertainty or overly broadening the scope of analysis. This aligns with the goal of understanding the predictors' effect on the response rather than creating a highly predictive model.

Background details and diagnostics are included in [Appendix -@sec-model-details]

## Model 

\begin{align}
\text{GSAx\_segment}_i &= \beta_0 
+ \beta_1 \times \text{isHomeTeam}_i \\
& \quad + \beta_2 \times \text{isPlayoffGame}_i \\
& \quad + \beta_3 \times \text{period2nd Period}_i \\
& \quad + \beta_4 \times \text{period3rd Period}_i \\
& \quad + \beta_5 \times \text{periodOvertime}_i \\
& \quad + \beta_6 \times \text{period2nd OT or later}_i \\
& \quad + \beta_7 \times \text{goalieTeamScoreDifferential}_i \\
& \quad + \beta_8 \times \text{shots\_faced}_i \\
& \quad + \beta_9 \times \text{shotslast3min}_i \\
& \quad + \beta_{10} \times \text{GSAx\_so\_far}_i \\
& \quad + \beta_{11} \times \text{last\_game\_GSAx}_i \\
& \quad + \beta_{12} \times \text{last\_5\_avg\_GSAx}_i \\
& \quad + \beta_{13} \times (\text{isHomeTeam}_i \times \text{isPlayoffGame}_i) \\
& \quad + \beta_{14} \times (\text{goalieTeamScoreDifferential}_i \times \text{shotslast3min}_i) \\
& \quad + \beta_{15} \times (\text{goalieTeamScoreDifferential}_i \times \text{shots\_faced}_i) \\
& \quad + \beta_{16} \times (\text{GSAx\_so\_far}_i \times \text{shotslast3min}_i)
\end{align}

-   $\beta_0$: The intercept of the model, representing the expected value of `GSAx_segment` when all predictors are set to zero (i.e., when the game is neither a home game nor a playoff game, the score differential is zero, and no shots have been faced in the last three minutes, etc.).

-   $\beta_1$: The coefficient representing the change in `GSAx_segment` when the game is a home game (as indicated by `isHomeTeam = 1`), compared to when the game is an away game, holding all other variables constant.

-   $\beta_2$: The coefficient representing the change in `GSAx_segment` when the game is a playoff game (`isPlayoffGame = 1`), compared to when it is a regular season game, holding all other variables constant.

-   $\beta_3, \beta_4, \beta_5, \beta_6$: The coefficients representing the change in `GSAx_segment` compared to the baseline 1st period, depending on if the game is in the 2nd, 3rd, OT, or extra OT periods respectively, holding all other variables constant. As discussed in @sec-period, `period` is categorical to avoid assuming a linear progression.

-   $\beta_7$: The coefficient representing the change in `GSAx_segment` for a one-unit increase in the `goalieTeamScoreDifferential`, holding all other variables constant. This variable measures the score difference between the goaltender's team and the opponent, reflecting the impact of game context on goaltender performance.

-   $\beta_8$: The coefficient representing the change in `GSAx_segment` for a one-unit increase in `shots_faced` by the goaltender during the game, holding all other predictors constant. This represents how goaltender performance changes with an increased workload.

-   $\beta_9$: The coefficient representing the change in `GSAx_segment` for a one-unit increase in the number of `shotslast3min`, the average count of shots faced in the last 3 minutes, holding all other predictors constant. This quantifies how recent shot activity affects the goaltender's performance.

-   $\beta_{10}$: The coefficient representing the change in `GSAx_segment` for a one-unit increase in `GSAx_so_far`, the prior cumulative performance of the goaltender, holding all other predictors constant. This accounts for how a goaltender’s in-game performance thus far influences current performance.

-   $\beta_{11}$: The coefficient representing the change in `GSAx_segment` when the goaltender’s performance in the previous game (`last_game_GSAx`) increases by one GSAx, holding all other predictors constant. This captures the effect of previous game performance trend on current performance.

-   $\beta_{12}$: The coefficient representing the change in `GSAx_segment` when the average performance over the last five games (`last_5_avg_GSAx`) increases by one GSAx, holding all other predictors constant. This captures the effect of the goaltender's longer-term performance trend on current performance.

-   $\beta_{13}$: The coefficient representing the change in `GSAx_segment` due to the interaction between being a home game (`isHomeTeam`) and a playoff game (`isPlayoffGame`). This accounts for how home-ice advantage may differ in high-stakes playoff games and how this combination influences goaltender performance.

-   $\beta_{14}$: The coefficient representing the change in `GSAx_segment` due to the interaction between `goalieTeamScoreDifferential` and `shotslast3min`, recognizing that the goaltenders may be affected differently by recent shot activity depending on the game score.

-   $\beta_{15}$: The coefficient representing the change in `GSAx_segment` due to the interaction between `goalieTeamScoreDifferential` and `shots_faced`.  recognizing that the goaltenders may be affected differently by a high workload depending on the game score.

-   $\beta_{16}$: The coefficient representing the change in `GSAx_segment` due to the interaction between `GSAx_so_far` and `shotslast3min`, accounting for how a goaltender’s prior performance and recent shot activity jointly impact their current performance.

## Assumptions and validation

The model assumes no systematic relationship between the residuals and the fitted values of the response variable, or between residuals and any predictor. This ensures that the unexplained variance is random and does not display patterns that might indicate unaddressed non-linear relationships. We assess these assumptions using residuals vs. fitted values plots.

The model also assumes a linear relationship between the predictors and the response variable GSAx_segment. This means the effect of each predictor on GSAx_segment is additive and constant. Residual plots are used to evaluate whether the linearity assumption holds.

Additionally, the model assumes that the residuals are normally distributed, independent, and have constant variance (homoscedasticity). If these assumptions are violated, the model's estimates may be biased or invalid. We check these with a normal QQ plot.

We mentioned earlier in @sec-variables that we need to check for multicollinearity. Predictors should not be highly correlated, as this can lead to unstable estimates and inflate standard errors. We used Generalized Variance Inflation Factor (GVIF) analysis to identify potential multicollinearity issues.

To validate the model, we perform a train-test split (80/20). The model is fit using the training set, and performance is evaluated on the test set using the Mean Squared Error (MSE) and R-squared values. Since the R-squared of the model on the training and testing set is similar, we conclude that the model generalizes well and is not overfit.

Further details and graphs are included in [Appendix -@sec-model-details].

## Limitations

There are a few limitations to our model:

Due to lack of data, the model does not include all possible external factors influencing goaltender performance. Some other possible factors include such as team overall performance, team tactics, current health, days of rest since last game, contract situation, or game-specific psychological factors. These omissions could lead to lack of model precision or biased estimates for included predictors.

We assume linearity for all predictor variables. While this simplifies the model, it may not fully capture the complexities of goaltender performance.

The model's response variable has flaws, as discussed in @sec-responsevariable.

The R-squared value indicates that only a small portion of variance in `GSAx_segment` is explained by the model, so the model cannot be used to draw extremely strong conclusions about the relationships between our predictors and `GSAx_segment`.

## Appropriate use

There are some contexts where the model is not appropriate for use:

The model may not be suitable when interactions or dynamics beyond those included (e.g., omitted variables discussed above) significantly influence performance. 

The model is designed to estimate the effects of external factors on goaltender over- or underperformance rather than to maximize predictive accuracy. As such, it does not perform well when asked to precisely predict the response `GSAx_segment`.


# Results {#sec-results}

Our model regression coefficients and their associated standard errors are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| label: tbl-modelresults
#| tbl-cap: Coefficient values and their errors

model <- readRDS("../models/model.rds")
modelsummary(model, stars = FALSE, , gof_omit = ".*")
```

## Coefficient Interpretation

From the provided table of regression coefficients, we can draw the conclusions about the model's results. Each coefficient represents the magnitude of the effect of the corresponding variable or interaction term on GSAx_segment, holding other variables constant. The standard error (in parentheses) allows us to determine if terms are significant; if the coefficients are a standard error from 0, and have p-values above a 0.05 significance level, they are likely insignificant.

### Significant terms

Binary/Categorical:

- `isHomeTeam`  
   Coefficient: `-0.003`  
   Implication: Playing at home is associated with a slight decrease in `GSAx_segment`, suggesting that goaltenders may slightly underperform at home.  

- `period3rd Period`  
   Coefficient: `0.013`  
   Implication: Performance improves slightly in the 3rd period compared to the baseline 1st period.  

- `periodOvertime`  
   Coefficient: `-0.091`  
   Implication: Goaltenders perform significantly worse during overtime compared to the baseline 1st period.  

Continuous:

- `goalieTeamScoreDifferential`  
   Coefficient: `0.011`  
   Implication: An increase in the score differential (goalie's team scores a goal) is associated with an increase in `GSAx_segment`, indicating improved goaltender performance when leading.  

- `shotslast3min`  
   Coefficient: `0.009`  
   Implication: Facing more shots in the last three minutes is associated with a better `GSAx_segment`, suggesting that recent activity may keep the goaltender in a rhythm or alert.  

- `shots_faced`  
   Coefficient: `-0.001`  
   Implication: Each additional shot faced is associated with a small decrease in `GSAx_segment`, suggesting that increased workload slightly reduces performance.  


- `GSAx_so_far`  
   Coefficient: `0.022`  
   Implication: Better cumulative performance earlier in the game is associated with improved performance during the segment, indicating momentum or consistency.  

- `shotslast3min:GSAx_so_far`  
   Coefficient: `0.002`  
   Implication: The interaction between recent activity (shots in the last three minutes) and cumulative performance (`GSAx_so_far`) suggests that recent activity amplifies the positive effects of prior performance. 

Effect of continuous predictors on `GSAx_segment`: for a one-unit increase in each of the 5 continuous variables/interaction terms above, `GSAx_segment` changes by the magnitude of the coefficient. For example, if the goalie's team were to score an extra goal, `GSAx_segment` would increase by 0.011. 

Although the coefficients are small, they still have some significance. For example, the 0.013 coefficient for period3rd Period can be interpreted as a 1.3% increase in goaltender performance in the 3rd period compared to the 1st.

### Insignificant terms

The coefficients for these variables are likely to be 0, meaning the effects of these variables on `GSAx_segment` are not strong enough to make conclusions:

- Intercept: The baseline value itself is not particularly meaningful since most predictors will not realistically be zero.
- `isPlayoffGame`  
- `period2nd OT or later`  
- `period2nd Period`  
- `last_game_GSAx`  
- `last_5_avg_GSAx`  
- `isHomeTeam:isPlayoffGame`  
- `goalieTeamScoreDifferential:shotslast3min`  


## Effects of Significant Terms

To better visualize the effects of significant terms, here are how the values of `GSAx_segment` differ for each of our significant terms.

### Home vs Away

@tbl-homeaway compares goaltender performance `GSAx_segment` between home and away games. The average GSAx_segment for away games is -0.0076, while for home games, it is -0.0087. This small difference (-0.0012) is consistent with the model findings, indicating that goaltenders perform slightly worse at home, with a 0.12% decrease in performance. This could be due to increased pressure at home, although 0.12% is a very small difference.

```{r}
#| echo: false
#| label: tbl-homeaway
#| tbl-cap: GSAx_segment values for home and away

shot_data %>%
  group_by(isHomeTeam) %>%
  summarize(
    Count = n(),
    `Average GSAx Segment` = mean(GSAx_segment)) %>%
  mutate(`goaltenderTeam` = ifelse(isHomeTeam == 1, "Home", "Away")) %>%
  select(`goaltenderTeam`, Count, `Average GSAx Segment`) %>%
  kable(format = "pipe", align = c("l", "r", "r"), col.names = c("Goaltender Team", "Count", "Avg GSAx_Segment"))
```

### Goalie Team Score Differential
```{r}
#| echo: false
#| warning: false
#| label: tbl-scorediff
#| tbl-cap: GSAx_segment values by score differential

diff <- shot_data %>% mutate(
  goalieTeamScoreDifferential = round(goalieTeamScoreDifferential, 0),
    goalieTeamScoreDifferential = case_when(
      goalieTeamScoreDifferential >= 4 ~ "4+",
      goalieTeamScoreDifferential <= -4 ~ "-4+",
      TRUE ~ as.character(goalieTeamScoreDifferential)),
    goalieTeamScoreDifferential = factor(
      goalieTeamScoreDifferential,
      levels = c("4+", "3", "2", "1", "0", "-1", "-2", "-3", "-4+")
    ))
diff %>% group_by(goalieTeamScoreDifferential) %>%
    summarize(
      count = n(),
      avg_GSAx_segment = mean(GSAx_segment)
    ) %>% arrange(goalieTeamScoreDifferential) %>% 
  kable(
    format = "pipe", 
    col.names = c("Score Differential", "Segments", "Avg GSAx of Segment"),,
    align = c("c", "r", "r")
  )
```

@tbl-scorediff summarizes `GSAx_segment` values based on the game score, represented as the score differential of the goalie's team. As the goaltender's team gains an additional goal, the average `GSAx_segment` improves, from being negative when the goaltending team is trailing to positive when the team is ahead. The data reveals a trend where goaltenders perform better as their team increases their lead, likely due to reduced pressure or easier defensive situations. Conversely, performance decreases when the team is trailing, potentially reflecting higher-pressure situations or increased shot difficulty.

### Shots faced in last 3 minutes
```{r}
#| echo: false
#| label: tbl-last3
#| tbl-cap: GSAx_segment values versus shots faced in last 3 minutes

shot_data %>%
    mutate(
      shotslast3min = round(shotslast3min, 0),
      shotslast3min_group = case_when(
        shotslast3min == 0 ~ "0",
        shotslast3min == 1 ~ "1",
        shotslast3min == 2 ~ "2",
        shotslast3min == 3 ~ "3",
        shotslast3min == 4 ~ "4",
        shotslast3min >= 5 ~ "5+"
      )
    ) %>%
    group_by(shotslast3min_group) %>%
    summarize(
      count = n(),
      avg_GSAx_segment = mean(GSAx_segment)
    ) %>% arrange(shotslast3min_group) %>% 
  kable(
    format = "pipe", 
    col.names = c("Avg. Shots in last 3 min", "Segments", "Avg GSAx of Segment"),,
    align = c("c", "r", "r")
  )
```

@tbl-last3 examines how recent shot activity influences goaltender performance. Segments with zero shot activity have the lowest average `GSAx_segment` at -0.029; this steadily increases until we reach segments with five or more shots, which have the highest average of 0.024. This trend suggests that goaltenders perform better when actively engaged, possibly due to improved focus or rhythm. Conversely, performance decreases when goaltenders are inactive for extended periods. 

```{r}
#| echo: false
#| label: fig-shots
#| fig-cap: GSAx_segment values versus cumulative shots faced

shot_data %>%
    mutate(
      shots_faced_group = case_when(
        shots_faced >= 0 & shots_faced <= 5 ~ "0-5",
        shots_faced >= 5 & shots_faced <= 10 ~ "5-10",
        shots_faced >= 10 & shots_faced <= 15 ~ "10-15",
        shots_faced >= 15 & shots_faced <= 20 ~ "15-20",
        shots_faced >= 20 & shots_faced <= 25 ~ "20-25",
        shots_faced >= 25 & shots_faced <= 30 ~ "25-30",
        shots_faced >= 30 & shots_faced <= 35 ~ "30-35",
        shots_faced >= 35 ~ "35+"
      )
    ) %>%
    group_by(shots_faced_group) %>%
    summarize(
      count = n(),
      avg_GSAx_segment = mean(GSAx_segment)
    ) %>% arrange(desc(count)) %>% 
  kable(
    format = "pipe", 
    col.names = c("Shots Faced So Far", "Segments", "Avg GSAx of Segment"),,
    align = c("c", "r", "r")
  )
```

@fig-shots examines the relationship between the total number of shots faced by a goaltender so far in a game and the corresponding `GSAx_segment`. The data show a clear downward trend in performance as the cumulative number of shots faced increases. Segments where the goaltender has faced 0–5 shots have the highest average `GSAx_segment` of -0.003, and this decreases until we reach segments with 35 or more shots, with average `GSAx_segment` -0.025.

This trend suggests that as goaltenders face more shots over the course of a game, their performance tends to decline. This may be due to physical fatigue or mental strain as the game prorgresses. Notably, the decline in performance accelerates beyond 25 shots, indicating that heavy workloads can have a pronounced negative impact on `GSAx_segment`. 

```{r}
#| echo: false
#| label: fig-sofar
#| fig-cap: Scatterplot of GSAx_segment values versus GSAx_so_far

ggplot(shot_data, aes(x = GSAx_so_far, y = GSAx_segment)) +
    geom_point(size = 0.5, color = "black") + 
    geom_smooth(method = "lm", color = "red", se = FALSE, formula = y ~ x) +
    labs(
      title = paste("Relationship Between GSAx so far and GSAx_segment"),
      x = "GSAx so far",
      y = "GSAx_segment"
    ) + theme_minimal()
```

@fig-sofar shows the relationship between a goaltender's cumulative performance up to a given segment, measured by `GSAx_so_far`, and their performance during that segment `GSAx_segment`. The positive slope of the trend line indicates that better cumulative performance is associated with better segment performance. This suggests a momentum effect, where goaltenders who perform well earlier in the game are more likely to continue performing well.

However, the spread of residuals shows significant variability in segment performance, showing that `GSAx_so_far` is still far from fully explaining segment performance, and the relationship between the two is relatively weak. This aligns with the model finding that `GSAx_so_far` has a significant but modest effect size.

# Discussion {#sec-discussion}

## Significant Predictors of Goaltender Overperformance

The analysis identifies several significant predictors that shape goaltender performance, as measured by goals saved above expected over 10 minute segments. Among these, score differential shows that performance improves as the goaltender’s team takes a lead, reflecting reduced pressure or fewer high-quality scoring chances when leading. This result highlights the importance of game context in shaping outcomes, as trailing teams may expose their goaltenders to more challenging scenarios, and winning teams may put extra effort into defending their goaltender.

Recent shot activity also plays a meaningful role, with increased engagement in the minutes preceding a segment positively affecting performance. This suggests that consistent involvement helps goaltenders maintain focus and rhythm. Conversely, the cumulative number of shots faced in a game negatively impacts performance, illustrating the toll of sustained workloads and fatigue.

The sum of in-game GSAx prior to segments, a measure of cumulative performance within the game, has a positive relationship with segment performance, suggesting momentum or consistency. Goaltenders who perform well earlier in the game are more likely to sustain that level of performance later. The interaction between this variable and recent shot activity underscores this trend, indicating that recent activity enhances the positive effects of prior performance.

## Insignificant Predictors and their Implications

Not all factors examined in the model significantly influenced goaltender overperformance. Neither recent performance metrics, such as goaltender overperformance in the previous or past 5 games, nor broader game state variables like home/away or playoff status showed a meaningful relationship with segment performance. These results suggest that external situational factors within the game have a stronger impact on goaltender outcomes than historical trends or the context surrounding the game.

The lack of influence from recent performance metrics challenges the popular notion of "hot streaks" among goaltenders. Similarly, the negative effect of playing at home implies that home-ice advantage has little bearing on individual goaltending performance, even if it is a factor in overall team success. These findings reveal that in-game dynamics are more likely to explain performance variability.


## Weaknesses and next steps

As discussed, the analysis model has several limitations. First, the relatively low predictive power indicates that many unmeasured variables influence overperformance. Incorporating elements measuring factors such as team overall performance, team tactics, current health, days of rest since last game, contract situation, or game-specific psychological factors in future models could enhance the explanatory power of the analysis. New datasets could also help; for example, puck and player tracking data would greatly supplement traditional event data, providing in-game context that is currently unaccounted for. 

The assumption of linear relationships between predictors and the performance simplifies complex dynamics. For instance, the relationship between workload and performance may follow a non-linear pattern, with sharp declines after a certain threshold. Non-linear models or machine learning approaches could address these complexities more effectively. We could also create complex models combining segment-level data with shot-level or game-level analysis, particularly during critical moments in games.

Future work could also validate these findings across different leagues, and levels of play. The NHL represents the best of the best and all of its goaltenders are of elite skill level; it would be informative to see what trends develop when analyzing data of lesser professionals or even amateurs.  Expanding the scope to include more holistic groups would contribute to a more detailed understanding of what drives goaltender performance under varying conditions.

# Extras

A datasheet for the dataset is found in @datasheet.

\newpage

\appendix

# Appendix {-}

# Datasheet {#sec-datasheet}

# Data cleaning and preparation {#sec-appendix-a}

To clean the data, we first drop erroneous entries - shots with NA values for goaltender name `goalieNameForShot`, boolean variable `goal`, or identifier `game_id`. We remove shots taken on an empty net from when the goaltender was substituted for an extra skater. In addition, we transform team variables categorized by `home` or `away` team to the goalie's team or shooting team, depending on which team is taking the shot.

We calculate variables required for our analysis model: Goals Saved Above Expected (`GSAx`) for each shot is obtained by subtracting the expected goal value of the shot `xGoal` from boolean value `goal`. `xGoal` is modelled by Moneypuck based on many other shot variables @moneypuck. 

`period`, which is categorical, is obtained based on the `time` in seconds elapsed. Goaltender-specific variables such as `shots_faced`, `shotslast3min` and `GSAx_so_far` are obtained by counting shots and their associated GSAx. 

Recent performance variables `last_game_GSAx` and `last_5_avg_GSAx` are calculated by first finding the current game's total `GSAx` and average of the last 5 games, respectively, and then shifting this data to the next game. We imputate the NA values for `last_game_GSAx` and `last_5_avg_GSAx` (occurs for the goaltender's first game) by assigning them to the median of the goalie's `last_game_GSAx` and `last_5_avg_GSAx` for the season.

Prior to modelling, we create 10-minute time segments based on `time`, group all shots by segments, and average all of their variables (both predictors and response) across the segment. 

# Data manipulation details

Data was cleaned using @citeR and packages @arrow, @tidyverse, @zoo. Data was tested and analyzed with @testthat, @caret, and @knitr. Data visualizations were created with @kableExtra.

# Model details {#sec-model-details}

### Checking Residual vs Fitted Values

```{r}
#| echo: false
#| out-width: 50%

model <- readRDS("../models/model.rds")
plot(model, which = 1) 
```

### Checking relationship between predictors and residuals
```{r}
#| echo: false
#| warning: false
#| out-width: 50%

# Train-Test Split 
set.seed(424)
train_index <- createDataPartition(shot_data$GSAx_segment, p = 0.8, list = FALSE)
train_data <- shot_data[train_index, ]
test_data <- shot_data[-train_index, ]

residuals_data <- train_data %>% mutate(residuals = residuals(model, type = "deviance"))
ggplot(residuals_data, aes(x = as.factor(period), y = residuals)) +
  geom_boxplot() +
  labs(x = "Categorical Predictor Variable", y = "Deviance Residuals") +
  theme_minimal()

plot_residuals <- function(x_var) {
  ggplot(residuals_data, aes_string(x = x_var, y = "residuals")) +
    geom_point(alpha = 0.5) +
    geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
    labs(x = x_var, y = "Deviance Residuals") +
    theme_minimal()
}
```

```{r}
#| echo: false
#| out-width: 50%

plot_residuals("isPlayoffGame")
```

```{r}
#| echo: false
#| out-width: 50%

plot_residuals("isHomeTeam")
```

```{r}
#| echo: false
#| out-width: 50%

plot_residuals("GSAx_so_far")
```

```{r}
#| echo: false
#| out-width: 50%

plot_residuals("shotslast3min")
```

```{r}
#| echo: false
#| out-width: 50%

plot_residuals("shots_faced")
```

```{r}
#| echo: false
#| out-width: 50%

plot_residuals("goalieTeamScoreDifferential")
```

```{r}
#| echo: false
#| out-width: 50%

plot_residuals("last_game_GSAx")
```

```{r}
#| echo: false
#| out-width: 50%

plot_residuals("last_5_avg_GSAx")
```

### Normal Q-Q plot to check normality
```{r}
#| echo: false
#| out-width: 50%

ggplot(residuals_data, aes(sample = residuals)) +
  stat_qq(alpha = 0.5) +
  stat_qq_line(color = "red", linetype = "dashed") +
  labs(title = "Q-Q Plot of Residuals",
       x = "Theoretical Quantiles",
       y = "Sample Quantiles") +
  theme_minimal()
```
<!-- ### Generalized Variance Inflation Factor -->

<!-- ```{r} -->
<!-- #| echo: false -->

<!-- vif <- vif(model, type = 'predictor') -->
<!-- vif %>% kable(format = "pipe", col.names = c("Predictor", "GVIF", "df", "GVIF^(1/(2*Df))", "Interacts With"))  -->
<!-- ``` -->

<!-- ### Validating with test data -->
<!-- ```{r} -->
<!-- #| echo: false -->

<!-- test_predictions <- predict(model, newdata = test_data) -->
<!-- test_residuals <- test_data$GSAx_segment - test_predictions -->
<!-- # Mean Squared Error (MSE) -->
<!-- mse <- mean(test_residuals^2) -->
<!-- print(paste("Mean Squared Error (MSE):", mse)) -->
<!-- # R-squared for the test set -->
<!-- ss_total <- sum((test_data$GSAx_segment - mean(test_data$GSAx_segment))^2) -->
<!-- ss_residual <- sum(test_residuals^2) -->
<!-- r_squared <- 1 - (ss_residual / ss_total) -->
<!-- print(paste("R-squared on test set:", r_squared)) -->
<!-- ``` -->

\newpage

# References
